name: Lint, test and build container
on:
  # On a default pull request event (created, synced, ...)
  pull_request:

  # On each push to specific branches
  push:
    branches:
      - main

  # When a new release is created
  release:
    types: [created]

# Run on a tag event that matches the versioning pattern
# on:
#   push:
#     tags:
#       - 'v*' # Match tags that follow version names such as v1.0.0

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    name: Build and push to docker hub
    if: github.event_name != 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Inject slugshort variables
        uses: rlespinasse/github-slug-action@v4
      # Set explicit image tag on actual release
      - name: Set release image name
        if: ${{ github.event_name == 'release' }}
        run: echo "image_name=ameeuw/${{ env.GITHUB_REPOSITORY_NAME_PART }}:${{ github.event.release.name }}" >> $GITHUB_ENV

      - name: Set "latest" tag for each branch
        if: ${{ github.event_name != 'release' }}
        run: echo "image_name_latest=ameeuw/${{ env.GITHUB_REPOSITORY_NAME_PART }}:${{ env.GITHUB_REF_SLUG }}-latest" >> $GITHUB_ENV

      - name: Set immutable image tag
        run: echo "image_immutable_tag=ameeuw/${{ env.GITHUB_REPOSITORY_NAME_PART }}:${{ env.GITHUB_REF_SLUG }}-$(date +%F.%H%M%S)-${{ env.GITHUB_SHA_SHORT }}" >> $GITHUB_ENV

      # Make sure the repository has access to the following secrets
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./ulp/Dockerfile
          push: true
          tags: ${{ env.image_name }},${{ env.image_name_latest }},${{ env.image_immutable_tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
